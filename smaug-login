#!/usr/bin/env python

import json
import sys
import urllib2
import hashlib
from pprint import pprint

class AppConstants(object):
    testingURL = "http://api-testing.olx.com"
    stagingURL = "http://api-staging.olx.com"
    liveURL = "http://api-v2.olx.com"
    localURL = "http://localhost:9000"

    challengeResource = "/users/challenge?u=%s"
    loginResource = "/users/login?h=%(hash)s&c=%(challenge)s"


class Authenticator(object):
    def __init__(self, user, password, host):
        self.user = user
        self.password = password
        self.host = host

    def execute(self):
        challenge = self._doChallenge()
        token = self._doLogin(challenge)
        return token

    def _doChallenge(self):
        url = self._getHostURL() + AppConstants.challengeResource
        res = urllib2.urlopen(url % self.user).read()
        return json.loads(res).get('challenge')

    def _doLogin(self, challenge):
        url = self._getHostURL() + AppConstants.loginResource
        passMD5 = hashlib.md5(self.password).hexdigest()
        hash_ = hashlib.sha512(passMD5 + self.user).hexdigest()
        res = urllib2.urlopen(url % {"hash":hash_, "challenge":challenge})
        return json.loads(res.read())

    def _getHostURL(self):
        lowerHost = self.host.lower()
        url = AppConstants.localURL
        if lowerHost == "testing" or lowerHost == "t":
            url = AppConstants.testingURL
        elif lowerHost == "staging" or lowerHost == "s":
            url = AppConstants.stagingURL
        elif lowerHost == "live" or lowerHost == "l":
            url = AppConstants.liveURL
        return url


if __name__ == "__main__":
    if len(sys.argv) <= 1 or sys.argv[1] == "--help":
       print """
       Usage: smaug-login <username> <password> [<host>]
       host is optional:
            testing | t (default)
            staging | s
            live | l
            dev | d

       Host Specs:
       -----------
       testing = api-testing.olx.com
       staging = api-staging.olx.com
       live = api-v2.olx.com
       local = localhost:9000
       """
       sys.exit(0)

    if len(sys.argv) == 2:
       print " [ERROR] you need to provide a password."
       sys.exit(0)

    host = "dev"
    if len(sys.argv) > 3:
       host = sys.argv[3]

    user = sys.argv[1]
    password = sys.argv[2]

    validUser = Authenticator(user, password, host).execute()
    pprint(validUser)